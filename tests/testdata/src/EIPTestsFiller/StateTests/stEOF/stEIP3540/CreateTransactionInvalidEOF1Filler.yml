# Creation transaction with invalid EOF1 in initcode or in deployed code
# ---
# Tests filled with geth version in: https://github.com/ipsilon/go-ethereum/tree/c673883fae922f84c3ae1e66fd4e3f9a3d6683c3
# Active EIPs: 3540, 3670, 4200, 4750, 5450
CreateTransactionInvalidEOF1:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentBaseFee: '10'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6

  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 1000000000
      code: ''
      nonce: 0
      storage: {}

  transaction:
    data:
      # Malformed initcode
      
      # No magic
      - ':raw 0xef'
      # Invalid magic
      - ':raw 0xef0101010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      - ':raw 0xef0201010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      - ':raw 0xefff01010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      # No version
      - ':raw 0xef00'
      # Invalid version
      - ':raw 0xef0000010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      - ':raw 0xef0002010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      - ':raw 0xef00ff010004020001002903000000000000027fef000101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      # No header
      - ':raw 0xef0001'
      # No sections
      - ':raw 0xef000100'
      # No type section size
      - ':raw 0xef000101'
      # Type section size incomplete
      - ':raw 0xef00010100'
      # No total of code sections
      - ':raw 0xef000101000402'
      # Total of code sections incomplete
      - ':raw 0xef00010100040200'
      # No code section size
      - ':raw 0xef0001010004020001'
      # Code section size incomplete
      - ':raw 0xef000101000402000100'
      # No data section after code section size
      - ':raw 0xef00010100040200010001'
      # No section terminator after data section size
      - ':raw 0xef00010100040200010001030000'
      # No code section contents
      - ':raw 0xef000101000402000000010300000000000000'
      - ':raw 0xef000101000402000000000300000000000000'
      - ':raw 0xef00010100040200000300000000000000'
      - ':raw 0xef0001010000020000000003000000'
      - ':raw 0xef000101000002000003000000'
      # Type section contents incomplete
      - ':raw 0xef0001010004020001000103000000000000fe'
      # Code section contents incomplete
      - ':raw 0xef000101000402000100020300000000000000fe'
      # Trailing bytes after code section
      - ':raw 0xef00010100040200010004030000000000000160015000deadbeef'
      # Empty code section
      - ':raw 0xef000101000402000000000300000000000000'
      - ':raw 0xef000101000002000000000300000000000000'
      - ':raw 0xef000101000002000003000000'
      # Empty code section with non-empty data section
      - ':raw 0xef000101000402000100000300020000000000aabb'
      # Code section preceding type section
      - ':raw 0xef000102000100010100040300020000000000feaabb'
      # Data section preceding type section
      - ':raw 0xef000103000201000402000100010000000000feaabb'
      # Data section preceding code section
      - ':raw 0xef000101000403000202000100010000000000feaabb'
      # Data section without code section
      - ':raw 0xef00010100040300020000000000aabb'
      # No data section
      - ':raw 0xef000101000402000100010000000000fe'
      # No data section size
      - ':raw 0xef0001010004020001000103'
      # Data section size incomplete
      - ':raw 0xef000101000402000100010300'
      # No section terminator after data section size
      - ':raw 0xef00010100040200010001030002'
      - ':raw 0xef0001010004020001000103000200000000feaabb'
      # No data section contents
      - ':raw 0xef000101000402000100010300020000000000fe'
      # Data section contents incomplete
      - ':raw 0xef000101000402000100010300040000000000feaabbcc'
      # Trailing bytes after data section
      - ':raw 0xef000101000402000100010300040000000000feaabbccddee'
      # Multiple data sections
      - ':raw 0xef000101000402000100010300020300020000000000feaabbaabb'
      # Multiple code and data sections
      - ':raw 0xef000101000802000200010001030002030002000000000000000000fefeaabbaabb'
      # Unknown section IDs
      #   at the beginning
      - ':raw 0xef000104000300600000'
      - ':raw 0xef000105000300600000'
      - ':raw 0xef0001ff000300600000'
      #  after types section
      - ':raw 0xef000101000404000002000100010000000000fe'
      - ':raw 0xef000101000405000002000100010000000000fe'
      - ':raw 0xef0001010004ff000002000100010000000000fe'
      #  after code section
      - ':raw 0xef000101000402000104000000010000000000fe'
      - ':raw 0xef000101000402000105000000010000000000fe'
      - ':raw 0xef0001010004020001ff000000010000000000fe'
      #  after data section
      - ':raw 0xef000101000402000100010300010400000000000000feaa'
      - ':raw 0xef000101000402000100010300010500000000000000feaa'
      - ':raw 0xef00010100040200010001030001ff00000000000000feaa'


      # Valid legacy initcode returning malformed code
      
      # No magic
      - ':yul { mstore8(0, 0xef) return(0, 1) }'
      # Invalid magic
      - ':yul { mstore(0, 0xef010101000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef020101000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xefff0101000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      # No version
      - ':yul { mstore(0, 0xef00000000000000000000000000000000000000000000000000000000000000) return(0, 2) }'
      # Invalid version
      - ':yul { mstore(0, 0xef000001000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef000201000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef00ff01000402000100010300000000000000fe000000000000000000000000) return(0, 20) }'
      # No header
      - ':yul { mstore(0, 0xef00010000000000000000000000000000000000000000000000000000000000) return(0, 3) }'
      # No sections
      - ':yul { mstore(0, 0xef00010000000000000000000000000000000000000000000000000000000000) return(0, 4) }'
      # No type section size
      - ':yul { mstore(0, 0xef00010100000000000000000000000000000000000000000000000000000000) return(0, 4) }'
      # Type section size incomplete
      - ':yul { mstore(0, 0xef00010100000000000000000000000000000000000000000000000000000000) return(0, 5) }'
      # No total of code sections
      - ':yul { mstore(0, 0xef00010100040200000000000000000000000000000000000000000000000000) return(0, 7) }'
      # Total of code sections incomplete
      - ':yul { mstore(0, 0xef00010100040200000000000000000000000000000000000000000000000000) return(0, 8) }'
      # No code section size
      - ':yul { mstore(0, 0xef00010100040200010000000000000000000000000000000000000000000000) return(0, 9) }'
      # Code section size incomplete
      - ':yul { mstore(0, 0xef00010100040200010000000000000000000000000000000000000000000000) return(0, 10) }'
      # No data section after code section size
      - ':yul { mstore(0, 0xef00010100040200010001000000000000000000000000000000000000000000) return(0, 11) }'
      # No section terminator after data section size
      - ':yul { mstore(0, 0xef00010100040200010001030000000000000000000000000000000000000000) return(0, 14) }'
      # No code section contents
      - ':yul { mstore(0, 0xef00010100040200000001030000000000000000000000000000000000000000) return(0, 19) }'
      - ':yul { mstore(0, 0xef00010100040200000000030000000000000000000000000000000000000000) return(0, 19) }'
      - ':yul { mstore(0, 0xef00010100040200000300000000000000000000000000000000000000000000) return(0, 17) }'
      - ':yul { mstore(0, 0xef00010100000200000000030000000000000000000000000000000000000000) return(0, 15) }'
      - ':yul { mstore(0, 0xef00010100000200000300000000000000000000000000000000000000000000) return(0, 13) }'
      # Type section contents incomplete
      - ':yul { mstore(0, 0xef0001010004020001000100000000fe00000000000000000000000000000000) return(0, 16) }'
      # Code section contents incomplete
      - ':yul { mstore(0, 0xef000101000402000100020300000000000000fe000000000000000000000000) return(0, 20) }'
      # Trailing bytes after code section
      - ':yul { mstore(0, 0xef00010100040200010004030000000000000160015000deadbeef0000000000) return(0, 27) }'
      # Empty code section
      - ':yul { mstore(0, 0xef00010100040200000000030000000000000000000000000000000000000000) return(0, 19) }'
      - ':yul { mstore(0, 0xef00010100000200000000030000000000000000000000000000000000000000) return(0, 19) }'
      - ':yul { mstore(0, 0xef00010100000200000300000000000000000000000000000000000000000000) return(0, 13) }'
      # Empty code section with non-empty data section
      - ':yul { mstore(0, 0xef000101000402000100000300020000000000aabb0000000000000000000000) return(0, 21) }'
      # Code section preceding type section
      - ':yul { mstore(0, 0xef000102000100010100040300020000000000feaabb00000000000000000000) return(0, 22) }'
      # Data section preceding type section
      - ':yul { mstore(0, 0xef000103000201000402000100010000000000feaabb00000000000000000000) return(0, 22) }'
      # Data section preceding code section
      - ':yul { mstore(0, 0xef000101000403000202000100010000000000feaabb00000000000000000000) return(0, 22) }'
      # Data section without code section
      - ':yul { mstore(0, 0xef00010100040300020000000000aabb00000000000000000000000000000000) return(0, 16) }'
      # No data section
      - ':yul { mstore(0, 0xef000101000402000100010000000000fe000000000000000000000000000000) return(0, 17) }'
      # No data section size
      - ':yul { mstore(0, 0xef00010100040200010001030000000000000000000000000000000000000000) return(0, 12) }'
      # Data section size incomplete
      - ':yul { mstore(0, 0xef00010100040200010001030000000000000000000000000000000000000000) return(0, 13) }'
      # No section terminator after data section size
      - ':yul { mstore(0, 0xef00010100040200010001030002000000000000000000000000000000000000) return(0, 14) }'
      - ':yul { mstore(0, 0xef0001010004020001000103000200000000feaabb0000000000000000000000) return(0, 21) }'
      # No data section contents
      - ':yul { mstore(0, 0xef000101000402000100010300020000000000fe000000000000000000000000) return(0, 20) }'
      # Data section contents incomplete
      - ':yul { mstore(0, 0xef000101000402000100010300040000000000feaabbcc000000000000000000) return(0, 23) }'
      # Trailing bytes after data section
      - ':yul { mstore(0, 0xef000101000402000100010300040000000000feaabbccddee00000000000000) return(0, 25) }'
      # Multiple data sections
      - ':yul { mstore(0, 0xef000101000402000100010300020300020000000000feaabbaabb0000000000) return(0, 27) }'
      # Multiple code and data sections
      - ':yul { mstore(0, 0xef000101000802000200010001030002030002000000000000000000fefeaabb) mstore(32, 0xaabb000000000000000000000000000000000000000000000000000000000000) return(0, 34) }'
      # Unknown section IDs
      #   at the beginning
      - ':yul { mstore(0, 0xef00010400030060000000000000000000000000000000000000000000000000) return(0, 10) }'
      - ':yul { mstore(0, 0xef00010500030060000000000000000000000000000000000000000000000000) return(0, 10) }'
      - ':yul { mstore(0, 0xef0001ff00030060000000000000000000000000000000000000000000000000) return(0, 10) }'
      #   after types
      - ':yul { mstore(0, 0xef000101000404000002000100010000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef000101000405000002000100010000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef0001010004ff000002000100010000000000fe000000000000000000000000) return(0, 20) }'
      #   after code
      - ':yul { mstore(0, 0xef000101000402000104000000010000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef000101000402000105000000010000000000fe000000000000000000000000) return(0, 20) }'
      - ':yul { mstore(0, 0xef0001010004020001ff000000010000000000fe000000000000000000000000) return(0, 20) }'
      #   after data
      - ':yul { mstore(0, 0xef000101000402000100010300010400000000000000feaa0000000000000000) return(0, 24) }'
      - ':yul { mstore(0, 0xef000101000402000100010300010500000000000000feaa0000000000000000) return(0, 24) }'
      - ':yul { mstore(0, 0xef00010100040200010001030001ff00000000000000feaa0000000000000000) return(0, 24) }'

      # Valid EOF initcode returning malformed code

      # code section: PUSH1 23 CODEDIZE SUB DUP1 PUSH1 23 CODECOPY PUSH1 0 RETURN
      # 23 is offset of data section
      # data section contains deployed code

      # No magic
      # code to deploy: ef
      - ':raw 0xef0001010004020001000c03000100000000036001601f60003960016000f3ef'
      # Invalid magic
      # code to deploy: ef010101000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001002903000000000000027fef010101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      # code to deploy: ef020101000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001002903000000000000027fef020101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      # code to deploy: efff0101000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001002903000000000000027fefff0101000402000100010300000000000000fe00000000000000000000000060005260146000f3'
      # No version
      # code to deploy: ef00
      - ':raw 0xef0001010004020001000c03000200000000036002601f60003960026000f3ef00'
      # Invalid version
      # code to deploy: ef000001000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000001000402000100010300000000000000fe'
      # code to deploy: ef000201000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000201000402000100010300000000000000fe'
      # code to deploy: ef00ff01000402000100010300000000000000fe 
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef00ff01000402000100010300000000000000fe'
      # No header
      # code to deploy: ef0001
      - ':raw 0xef0001010004020001000c03000300000000036003601f60003960036000f3ef0001'
      # No type section size
      # code to deploy: ef000101
      - ':raw 0xef0001010002020001000c03000400000000036004601f60003960046000f3ef000101'
      # Type section size incomplete
      # code to deploy: ef00010100
      - ':raw 0xef0001010002020001000c03000500000000036005601f60003960056000f3ef00010100'
      # No total of code sections
      # code to deploy: ef000101000402
      - ':raw 0xef0001010004020001000c03000700000000036007601f60003960076000f3ef000101000402'
      # Total of code sections incomplete
      # code to deploy: ef00010100040200
      - ':raw 0xef0001010004020001000c03000800000000036008601f60003960086000f3ef00010100040200'
      # No code section size
      # code to deploy: ef0001010004020001
      - ':raw 0xef0001010004020001000c03000900000000036009601f60003960096000f3ef0001010004020001'
      # Code section size incomplete
      # code to deploy: ef000101000402000100
      - ':raw 0xef0001010004020001000c03000a0000000003600a601f600039600a6000f3ef000101000402000100'
      # No data section after code section size
      # code to deploy: ef00010100040200010001
      - ':raw 0xef0001010004020001000c03000b0000000003600b601f600039600b6000f3ef00010100040200010001'
      # No section terminator after data section size
      # code to deploy: ef00010100040200010001030000
      - ':raw 0xef0001010004020001000c03000e0000000003600e601f600039600e6000f3ef00010100040200010001030000'
      # No code section contents
      # code to deploy: ef000101000402000000010300000000000000
      - ':raw 0xef0001010004020001000c03001300000000036013601f60003960136000f3ef000101000402000000010300000000000000'
      # code to deploy: ef000101000402000000000300000000000000
      - ':raw 0xef0001010004020001000c03001300000000036013601f60003960136000f3ef000101000402000000000300000000000000'
      # code to deploy: ef00010100040200000300000000000000
      - ':raw 0xef0001010004020001000c03001100000000036011601f60003960116000f3ef00010100040200000300000000000000'
      # code to deploy: ef0001010000020000000003000000
      - ':raw 0xef0001010004020001000c03000f0000000003600f601f600039600f6000f3ef0001010000020000000003000000'
      # code to deploy: ef000101000002000003000000
      - ':raw 0xef0001010004020001000c03000d0000000003600d601f600039600d6000f3ef000101000002000003000000'
      # Type section contents incomplete
      # code to deploy: ef0001010004020001000100000000fe
      - ':raw 0xef0001010004020001000c03001000000000036010601f60003960106000f3ef0001010004020001000100000000fe'
      # Code section contents incomplete
      # code to deploy: ef000101000402000100020300000000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000402000100020300000000000000fe'
      # Trailing bytes after code section
      # code to deploy: ef00010100040200010004030000000000000160015000deadbeef
      - ':raw 0xef0001010004020001000c03001b0000000003601b601f600039601b6000f3ef00010100040200010004030000000000000160015000deadbeef'
      # Empty code section
      #   code to deploy: ef000101000402000000000300000000000000
      - ':raw 0xef0001010004020001000c03001300000000036013601f60003960136000f3ef000101000402000000000300000000000000'
      #   code to deploy: ef000101000002000000000300000000000000
      - ':raw 0xef0001010004020001000c03001300000000036013601f60003960136000f3ef000101000002000000000300000000000000'
      #   code to deploy: ef000101000002000003000000
      - ':raw 0xef0001010004020001000c03000d0000000003600d601f600039600d6000f3ef000101000002000003000000'
      # Empty code section with non-empty data section
      # code to deploy: 0xef000101000402000100000300020000000000aabb 
      - ':raw 0xef0001010002020001000c03001500000000036015601f60003960156000f3ef000101000202000100000300020000000000aabb'
      # Code section preceding type section
      # code to deploy: ef000102000100010100040300020000000000feaabb
      - ':raw 0xef0001010004020001000c03001600000000036016601f60003960166000f3ef000102000100010100040300020000000000feaabb'
      # Data section preceding type section
      # code to deploy: ef000103000201000402000100010000000000feaabb
      - ':raw 0xef0001010004020001000c03001600000000036016601f60003960166000f3ef000103000201000402000100010000000000feaabb'
      # Data section preceding code section
      # code to deploy: ef000101000403000202000100010000000000feaabb
      - ':raw 0xef0001010004020001000c03001600000000036016601f60003960166000f3ef000101000403000202000100010000000000feaabb'
      # Data section without code section
      # code to deploy: ef00010100040300020000000000aabb
      - ':raw 0xef0001010004020001000c03001000000000036010601f60003960106000f3ef00010100040300020000000000aabb'
      # No data section
      # code to deploy: ef000101000402000100010000000000fe 
      - ':raw 0xef0001010004020001000c03001100000000036011601f60003960116000f3ef000101000402000100010000000000fe'
      # No data section size
      # code to deploy: ef0001010004020001000103
      - ':raw 0xef0001010004020001000c03000c0000000003600c601f600039600c6000f3ef0001010004020001000103'
      # Data section size incomplete
      # code to deploy: ef000101000402000100010300
      - ':raw 0xef0001010004020001000c03000d0000000003600d601f600039600d6000f3ef000101000402000100010300'
      # No section terminator after data section size
      # code to deploy: ef00010100040200010001030002
      - ':raw 0xef0001010004020001000c03000e0000000003600e601f600039600e6000f3ef00010100040200010001030002'
      # code to deploy: ef0001010004020001000103000200000000feaabb
      - ':raw 0xef0001010004020001000c03001500000000036015601f60003960156000f3ef0001010004020001000103000200000000feaabb'
      # No data section contents
      # code to deploy: ef000101000402000100010300020000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000402000100010300020000000000fe'
      # Data section contents incomplete
      # code to deploy: ef000101000402000100010300040000000000feaabbcc
      - ':raw 0xef0001010004020001000c03001700000000036017601f60003960176000f3ef000101000402000100010300040000000000feaabbcc'
      # Trailing bytes after data section
      # code to deploy: ef000101000402000100010300040000000000feaabbccddee
      - ':raw 0xef0001010004020001000c03001900000000036019601f60003960196000f3ef000101000402000100010300040000000000feaabbccddee'
      # Multiple data sections
      # code to deploy: ef000101000402000100010300020300020000000000feaabbaabb
      - ':raw 0xef0001010004020001000c03001b0000000003601b601f600039601b6000f3ef000101000402000100010300020300020000000000feaabbaabb'
      # Multiple code and data sections
      # code to deploy: ef000101000802000200010001030002030002000000000000000000fefeaabbaabb
      - ':raw 0xef0001010004020001000c03002200000000036022601f60003960226000f3ef000101000802000200010001030002030002000000000000000000fefeaabbaabb'
      # Unknown section IDs
      #  at the beginning:
      # code to deploy: ef000104000300600000
      - ':raw 0xef0001010004020001000c03000a0000000003600a601f600039600a6000f3ef000104000300600000'
      # code to deploy: ef000105000300600000
      - ':raw 0xef0001010004020001000c03000a0000000003600a601f600039600a6000f3ef000105000300600000'
      # code to deploy: ef0001ff000300600000
      - ':raw 0xef0001010004020001000c03000a0000000003600a601f600039600a6000f3ef0001ff000300600000'
      #  after types section
      # code to deploy: ef000101000404000002000100010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000404000002000100010000000000fe'
      # code to deploy: ef000101000405000002000100010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000405000002000100010000000000fe'
      # code to deploy: ef0001010004ff000002000100010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef0001010004ff000002000100010000000000fe'
      #  after code section
      # code to deploy: ef000101000402000104000000010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000402000104000000010000000000fe'
      # code to deploy: ef000101000402000105000000010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef000101000402000105000000010000000000fe'
      # code to deploy: ef0001010004020001ff000000010000000000fe
      - ':raw 0xef0001010004020001000c03001400000000036014601f60003960146000f3ef0001010004020001ff000000010000000000fe'
      #  after data section
      # code to deploy: ef000101000402000100010300010400000000000000feaa
      - ':raw 0xef0001010004020001000c03001800000000036018601f60003960186000f3ef000101000402000100010300010400000000000000feaa'
      # code to deploy: ef000101000402000100010300010500000000000000feaa
      - ':raw 0xef0001010004020001000c03001800000000036018601f60003960186000f3ef000101000402000100010300010500000000000000feaa'
      # code to deploy: ef00010100040200010001030001ff00000000000000feaa
      - ':raw 0xef0001010004020001000c03001800000000036018601f60003960186000f3ef00010100040200010001030001ff00000000000000feaa'

      # EOF initcode => legacy code
      # initcode without data section
      # initcode code section: 'RETURN(0, 1)'
      # code to deploy: 'STOP'
      - ':raw 0xef00010100040200010005030000000000000260016000f3'
      # inicode with data section
      # initcode code section: 'CODECOPY(0, 31, 1) RETURN(0,1)' data section: '00'
      # code to deploy: 'STOP'
      - ':raw 0xef0001010004020001000c03000100000000036001601f60003960016000f300'

    gasLimit:
      - 70000
    gasPrice: 10
    nonce: 0
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: ''
    value:
      - 0

  expect:
    - indexes: {}
      network:
        - 'Shanghai'
      result:
       a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
         nonce: 1
       6295ee1b4f6dd65047762f924ecd367c17eabf8f:
         shouldnotexist: 1
    # Same expectation, but for London execution fails on EF byte, for 3540 it fails because EOF initcode or code is invalid
    - indexes: {}
      network:
        - '>=Cancun'
      result:
       a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
         nonce: 1
       6295ee1b4f6dd65047762f924ecd367c17eabf8f:
         shouldnotexist: 1
